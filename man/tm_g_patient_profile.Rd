% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_patient_profile.R
\name{tm_g_patient_profile}
\alias{tm_g_patient_profile}
\title{Patient Profile plot teal module}
\usage{
tm_g_patient_profile(
  label = "Patient Profile Plot",
  patient_id,
  sl_dataname,
  ex_dataname,
  ae_dataname,
  rs_dataname,
  cm_dataname,
  lb_dataname,
  show_ex_plot = TRUE,
  show_ae_plot = TRUE,
  show_rs_plot = TRUE,
  show_cm_plot = TRUE,
  show_lb_plot = TRUE,
  sl_start_date,
  ex_var = NULL,
  ae_var = NULL,
  ae_line_col_var = NULL,
  ae_line_col_opt = NULL,
  rs_var = NULL,
  cm_var = NULL,
  lb_var = NULL,
  x_limit = "-28, 365",
  plot_height = c(1200L, 400L, 5000L),
  plot_width = NULL,
  pre_output = NULL,
  post_output = NULL
)
}
\arguments{
\item{label}{(\code{character(1)})\cr
menu item label of the module in the teal app.}

\item{patient_id}{(\code{choices_seleced}) unique subject ID variable}

\item{sl_dataname}{(\code{character}) subject level dataset name,
needs to be available in the list passed to the \code{data}
argument of \code{\link[teal]{init}}}

\item{ex_dataname}{(\code{character}) exposures dataset name,
needs to be available in the list passed to the \code{data}
argument of \code{\link[teal]{init}} \cr
specify to \code{NA} if no exposure data is available}

\item{ae_dataname}{(\code{character}) adverse events dataset name,
needs to be available in the list passed to the \code{data}
argument of \code{\link[teal]{init}} \cr
specify to \code{NA} if no adverse events data is available}

\item{rs_dataname}{(\code{character}) response dataset name,
needs to be available in the list passed to the \code{data}
argument of \code{\link[teal]{init}} \cr
specify to \code{NA} if no response data is available}

\item{cm_dataname}{(\code{character}) concomitant medications dataset name,
needs to be available in the list passed to the \code{data}
argument of \code{\link[teal]{init}} \cr
specify to \code{NA} if no concomitant medications data is available}

\item{lb_dataname}{(\code{character}) labs dataset name,
needs to be available in the list passed to the \code{data}
argument of \code{\link[teal]{init}} \cr
specify to \code{NA} if no labs data is available}

\item{show_ex_plot}{boolean value of whether exposures plot is shown,
default is \code{TRUE}}

\item{show_ae_plot}{boolean value of whether adverse events plot is shown,
default is \code{TRUE}}

\item{show_rs_plot}{boolean value of whether response plot is shown,
default is \code{TRUE}}

\item{show_cm_plot}{boolean value of whether concomitant medications
plot is shown, default is \code{TRUE}}

\item{show_lb_plot}{boolean value of whether labs plot is shown,
default is \code{TRUE}}

\item{sl_start_date}{(\code{choices_selected}) study start date variable, usually set to treatment
start date or randomization date}

\item{ex_var}{(\code{choices_selected}) exposure variable to plot as each line \cr
leave unspecified or set to \code{NULL} if exposure data is not available}

\item{ae_var}{(\code{choices_selected}) adverse event variable to plot as each line \cr
leave unspecified or set to \code{NULL} if adverse events data is not available}

\item{ae_line_col_var}{(\code{choices_selected}) variable for coloring AE lines \cr
leave unspecified or set to \code{NULL} if adverse events data is not available}

\item{ae_line_col_opt}{aesthetic values to map color values (named vector to map color values to each name).
If not \code{NULL}, please make sure this contains all possible values for \code{ae_line_col_var} values. \cr
leave unspecified or set to \code{NULL} if adverse events data is not available}

\item{rs_var}{(\code{choices_selected}) response variable to plot as each line \cr
leave unspecified or set to \code{NULL} if response data is not available}

\item{cm_var}{(\code{choices_selected}) concomitant medication variable
to plot as each line \cr
leave unspecified or set to \code{NULL} if concomitant medications data is not available}

\item{lb_var}{(\code{choices_selected}) lab variable to plot as each line \cr
leave unspecified or set to \code{NULL} if labs data is not available}

\item{x_limit}{a single \code{character} string with two numbers
separated by a comma indicating the x-axis limit,
default is \code{"-28, 365"}}

\item{plot_height}{(\code{numeric(3)})\cr
vector to indicate default value, minimum and maximum values.}

\item{plot_width}{(\code{numeric(3)})\cr
vector to indicate default value, minimum and maximum values.}

\item{pre_output}{(\code{shiny.tag}, optional)\cr
with text placed before the output to put the output into context. For example a title.}

\item{post_output}{(\code{shiny.tag}, optional) with text placed after the output to put the output
into context. For example the \code{\link[shiny:helpText]{shiny::helpText()}} elements are useful.}
}
\value{
the \code{\link[teal:module]{teal::module()}} object.
}
\description{
Display patient profile plot as a shiny module
}
\details{
As the patient profile module plots different domains in one plot, the study day (x-axis)
is derived for consistency based the start date of user's choice in the app (for example,
\code{ADSL.RANDDT} or \code{ADSL.TRTSDT}):
\itemize{
\item In \code{ADAE}, \code{ADEX}, and \code{ADCM}, it would be study day based on \code{ASTDT} and/or
\code{AENDT} in reference to the start date
\item In \code{ADRS} and \code{ADLB}, it would be study day based on \code{ADT} in reference to
the start date
}
}
\examples{
library(scda)
library(nestcolor)

ADSL <- synthetic_cdisc_data("latest")$adsl
ADAE <- synthetic_cdisc_data("latest")$adae \%>\%
  mutate(
    ASTDT = as.Date(ASTDTM),
    AENDT = as.Date(AENDTM)
  )
ADCM <- synthetic_cdisc_data("latest")$adcm \%>\%
  mutate(
    ASTDT = as.Date(ASTDTM),
    AENDT = as.Date(AENDTM)
  )

# The step below is to pre-process ADCM to legacy standard
ADCM <- ADCM \%>\%
  select(-starts_with("ATC")) \%>\%
  unique()

ADRS <- synthetic_cdisc_data("latest")$adrs \%>\%
  mutate(ADT = as.Date(ADTM))
ADEX <- synthetic_cdisc_data("latest")$adex \%>\%
  mutate(
    ASTDT = as.Date(ASTDTM),
    AENDT = as.Date(AENDTM)
  )
ADLB <- synthetic_cdisc_data("latest")$adlb \%>\%
  mutate(
    ADT = as.Date(ADTM),
    LBSTRESN = as.numeric(LBSTRESC)
  )

x <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL,
      code = "ADSL <- synthetic_cdisc_data(\"latest\")$adsl"
    ),
    cdisc_dataset("ADRS", ADRS,
      code = "ADRS <- synthetic_cdisc_data(\"latest\")$adrs \%>\%
              mutate(ADT = as.Date(ADTM))"
    ),
    cdisc_dataset("ADAE", ADAE,
      code = "ADAE <- synthetic_cdisc_data(\"latest\")$adae \%>\%
              mutate(ASTDT = as.Date(ASTDTM),
                     AENDT = as.Date(AENDTM))"
    ),
    cdisc_dataset("ADCM", ADCM,
      code = "ADCM <- synthetic_cdisc_data(\"latest\")$adcm \%>\%
              mutate(ASTDT = as.Date(ASTDTM),
                     AENDT = as.Date(AENDTM))
              ADCM <- ADCM \%>\% select(-starts_with(\"ATC\")) \%>\% unique()",
      keys = c("STUDYID", "USUBJID", "ASTDTM", "CMSEQ", "CMDECOD")
    ),
    cdisc_dataset("ADLB", ADLB,
      code = "ADLB <- synthetic_cdisc_data(\"latest\")$adlb \%>\%
              mutate(ADT = as.Date(ADTM),
                     LBSTRESN = as.numeric(LBSTRESC))"
    ),
    cdisc_dataset("ADEX", ADEX,
      code = "ADEX <- synthetic_cdisc_data(\"latest\")$adex \%>\%
              mutate(ASTDT = as.Date(ASTDTM),
                     AENDT = as.Date(AENDTM))"
    ),
    check = TRUE
  ),
  modules = modules(
    tm_g_patient_profile(
      label = "Patient Profile Plot",
      patient_id = choices_selected(
        choices = unique(ADSL$USUBJID),
        selected = unique(ADSL$USUBJID)[1]
      ),
      sl_dataname = "ADSL",
      ex_dataname = "ADEX",
      ae_dataname = "ADAE",
      rs_dataname = "ADRS",
      cm_dataname = "ADCM",
      lb_dataname = "ADLB",
      show_ex_plot = TRUE,
      show_ae_plot = TRUE,
      show_rs_plot = TRUE,
      show_cm_plot = FALSE,
      show_lb_plot = TRUE,
      sl_start_date = choices_selected(
        selected = "TRTSDTM",
        choices = c("TRTSDTM", "RANDDT")
      ),
      ex_var = choices_selected(
        selected = "PARCAT2",
        choices = "PARCAT2"
      ),
      ae_var = choices_selected(
        selected = "AEDECOD",
        choices = c("AEDECOD", "AESOC")
      ),
      ae_line_col_var = choices_selected(
        selected = "AESER",
        choices = c("AESER", "AEREL")
      ),
      ae_line_col_opt = c("Y" = "red", "N" = "blue"),
      rs_var = choices_selected(
        selected = "PARAMCD",
        choices = "PARAMCD"
      ),
      cm_var = choices_selected(
        selected = "CMDECOD",
        choices = c("CMDECOD", "CMCAT")
      ),
      lb_var = choices_selected(
        selected = "LBTESTCD",
        choices = c("LBTESTCD", "LBCAT")
      ),
      x_limit = "-28, 750",
      plot_height = c(1200, 400, 5000)
    )
  )
)
if (interactive()) {
  shinyApp(x$ui, x$server)
}

}
\author{
Xuefeng Hou (houx14) \email{houx14@gene.com}

Tina Cho (chot) \email{tina.cho@roche.com}

Molly He (hey59) \email{hey59@gene.com}

Ting Qi (qit3) \email{qit3@gene.com}
}
