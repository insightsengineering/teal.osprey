% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_swimlane.R
\name{tm_g_swimlane}
\alias{tm_g_swimlane}
\title{Teal Module for \code{Swimlane} Plot}
\usage{
tm_g_swimlane(
  label,
  dataname,
  bar_var,
  bar_color_var = NULL,
  sort_var = NULL,
  marker_pos_var = NULL,
  marker_shape_var = NULL,
  marker_shape_opt = NULL,
  marker_color_var = NULL,
  marker_color_opt = NULL,
  anno_txt_var = NULL,
  vref_line = NULL,
  plot_height = c(1200L, 400L, 5000L),
  plot_width = NULL,
  pre_output = NULL,
  post_output = NULL,
  x_label = "Time from First Treatment (Day)"
)
}
\arguments{
\item{label}{(\code{character(1)})\cr
menu item label of the module in the teal app.}

\item{dataname}{analysis data used for plotting, needs to be available in the list passed to the \code{data}
argument of \code{\link[teal]{init}}. If no markers are to be plotted in the module, \code{"ADSL"} should be
the input. If markers are to be plotted, data name for the marker data should be the input}

\item{bar_var}{(\code{\link[teal.transform]{choices_selected}}) subject-level numeric variable from dataset
to plot as the bar length}

\item{bar_color_var}{(\code{\link[teal.transform]{choices_selected}}) color by variable (subject-level)}

\item{sort_var}{(\code{choices_selected}) sort by variable (subject-level)}

\item{marker_pos_var}{(\code{\link[teal.transform]{choices_selected}}) variable for marker position from marker data
(Note: make sure that marker position has the same relative start day as bar length variable \code{bar_var})}

\item{marker_shape_var}{(\code{\link[teal.transform]{choices_selected}}) marker shape variable from marker data}

\item{marker_shape_opt}{aesthetic values to map shape values (named vector to map shape values to each name).
If not \code{NULL}, please make sure this contains all possible values for \code{marker_shape_var} values,
otherwise shape will be assigned by \code{ggplot} default}

\item{marker_color_var}{marker color variable from marker data}

\item{marker_color_opt}{aesthetic values to map color values (named vector to map color values to each name).
If not \code{NULL}, please make sure this contains all possible values for \code{marker_color_var} values,
otherwise color will be assigned by \code{ggplot} default}

\item{anno_txt_var}{character vector with subject-level variable names that are selected as annotation}

\item{vref_line}{vertical reference lines}

\item{plot_height}{(\code{numeric(3)})\cr
vector to indicate default value, minimum and maximum values.}

\item{plot_width}{(\code{numeric(3)})\cr
vector to indicate default value, minimum and maximum values.}

\item{pre_output}{(\code{shiny.tag}, optional)\cr
with text placed before the output to put the output into context. For example a title.}

\item{post_output}{(\code{shiny.tag}, optional) with text placed after the output to put the output
into context. For example the \code{\link[shiny:helpText]{shiny::helpText()}} elements are useful.}

\item{x_label}{the label of the x axis}
}
\value{
the \code{\link[teal:teal_modules]{teal::module()}} object.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

This is teal module that generates a \code{swimlane} plot (bar plot with markers) for \code{ADaM} data
}
\examples{
# Example using stream (ADaM) dataset
data <- teal.data::cdisc_data() |>
  within(library(dplyr)) |>
  within(library(nestcolor)) |>
  within(ADSL <- osprey::rADSL \%>\%
    dplyr::mutate(TRTDURD = as.integer(TRTEDTM - TRTSDTM) + 1) \%>\%
    dplyr::filter(STRATA1 == "A" & ARMCD == "ARM A")) |>
  within(ADRS <- osprey::rADRS) |>
  within(ADRS <- ADRS \%>\%
    dplyr::filter(PARAMCD == "LSTASDI" & DCSREAS == "Death") \%>\%
    mutate(AVALC = DCSREAS, ADY = EOSDY) \%>\%
    base::rbind(ADRS \%>\% dplyr::filter(PARAMCD == "OVRINV" & AVALC != "NE")) \%>\%
    arrange(USUBJID))

teal.data::datanames(data) <- c("ADSL", "ADRS")
teal.data::join_keys(data) <- teal.data::default_cdisc_join_keys[teal.data::datanames(data)]

ADSL <- data[["ADSL"]]
ADRS <- data[["ADRS"]]

app <- teal::init(
  data = data,
  modules = teal::modules(
    tm_g_swimlane(
      label = "Swimlane Plot",
      dataname = "ADRS",
      bar_var = teal.transform::choices_selected(
        selected = "TRTDURD",
        choices = c("TRTDURD", "EOSDY")
      ),
      bar_color_var = teal.transform::choices_selected(
        selected = "EOSSTT",
        choices = c("EOSSTT", "ARM", "ARMCD", "ACTARM", "ACTARMCD", "SEX")
      ),
      sort_var = teal.transform::choices_selected(
        selected = "ACTARMCD",
        choices = c("USUBJID", "SITEID", "ACTARMCD", "TRTDURD")
      ),
      marker_pos_var = teal.transform::choices_selected(
        selected = "ADY",
        choices = c("ADY")
      ),
      marker_shape_var = teal.transform::choices_selected(
        selected = "AVALC",
        c("AVALC", "AVISIT")
      ),
      marker_shape_opt = c("CR" = 16, "PR" = 17, "SD" = 18, "PD" = 15, "Death" = 8),
      marker_color_var = teal.transform::choices_selected(
        selected = "AVALC",
        choices = c("AVALC", "AVISIT")
      ),
      marker_color_opt = c(
        "CR" = "green", "PR" = "blue", "SD" = "goldenrod",
        "PD" = "red", "Death" = "black"
      ),
      vref_line = c(30, 60),
      anno_txt_var = teal.transform::choices_selected(
        selected = c("ACTARM", "SEX"),
        choices = c(
          "ARM", "ARMCD", "ACTARM", "ACTARMCD", "AGEGR1",
          "SEX", "RACE", "COUNTRY", "DCSREAS", "DCSREASP"
        )
      )
    )
  )
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}

}
\author{
Ting Qi (qit3) \email{qit3@gene.com}
}
