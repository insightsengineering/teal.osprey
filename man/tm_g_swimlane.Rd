% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_swimlane.R
\name{tm_g_swimlane}
\alias{tm_g_swimlane}
\title{Teal Module for Swimlane Plot}
\usage{
tm_g_swimlane(
  label,
  dataname,
  bar_var,
  bar_color_var = NULL,
  sort_var = NULL,
  marker_pos_var = NULL,
  marker_shape_var = NULL,
  marker_shape_opt = NULL,
  marker_color_var = NULL,
  marker_color_opt = NULL,
  anno_txt_var = NULL,
  vref_line = NULL,
  plot_height = c(1200L, 400L, 5000L),
  plot_width = NULL,
  pre_output = NULL,
  post_output = NULL
)
}
\arguments{
\item{label}{(\code{character}) module label in the teal app. Please note that this module is developed based on
ADaM data structure and ADaM variables.}

\item{dataname}{analysis data used for plotting, needs to be available in the list passed to the \code{data}
argument of \code{\link[teal]{init}}. If no markers are to be plotted in the module, "ADSL" should be
the input. If markers are to be plotted, data name for the marker data should be the input}

\item{bar_var}{(\code{\link[teal]{choices_selected}}) subject-level numeric variable from dataset
to plot as the bar length}

\item{bar_color_var}{(\code{\link[teal]{choices_selected}}) color by variable (subject-level)}

\item{sort_var}{(\code{choices_selected}) sort by variable (subject-level)}

\item{marker_pos_var}{(\code{\link[teal]{choices_selected}}) variable for marker position from marker data
(Note: make sure that marker position has the same relative start day as bar length variable \code{bar_var})}

\item{marker_shape_var}{(\code{\link[teal]{choices_selected}}) marker shape variable from marker data}

\item{marker_shape_opt}{aesthetic values to map shape values (named vector to map shape values to each name).
If not \code{NULL}, please make sure this contains all possible values for \code{marker_shape_var} values,
otherwise shape will be assigned by \code{ggplot} default}

\item{marker_color_var}{marker color variable from marker data}

\item{marker_color_opt}{aesthetic values to map color values (named vector to map color values to each name).
If not \code{NULL}, please make sure this contains all possible values for \code{marker_color_var} values,
otherwise color will be assigned by \code{ggplot} default}

\item{anno_txt_var}{character vector with subject-level variable names that are selected as annotation}

\item{vref_line}{vertical reference lines}

\item{plot_height}{optional, (\code{numeric}) a vector of length three with \code{c(value, min, max)}. Specifies
the height of the main plot.}

\item{plot_width}{optional, (\code{numeric}) a vector of length three with \code{c(value, min, max)}. Specifies
the width of the main plot and renders a slider on the plot to interactively adjust the plot width.}

\item{pre_output}{optional, \code{shiny.tag} with text placed before the
output to put the output into context. For example a title.}

\item{post_output}{optional, \code{shiny.tag} with text placed after the
output to put the output into context. For example the
\code{\link[shiny]{helpText}} elements are useful.}
}
\value{
a \code{\link[teal]{module}} object
}
\description{
This is teal module that generates a swimlane plot (bar plot with markers) for ADaM data
}
\examples{

#Example using stream (ADaM) dataset
library(dplyr)

ADSL <- rADSL
ADRS <- rADRS

ADRS <- ADRS \%>\%
  dplyr::filter(PARAMCD == "LSTASDI" & DCSREAS == "Death") \%>\%
  mutate(AVALC = DCSREAS, ADY = EOSDY) \%>\%
  base::rbind(ADRS \%>\% dplyr::filter(PARAMCD == "OVRINV" & AVALC != "NE")) \%>\%
  arrange(USUBJID)

x <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL, code = "ADSL <- rADSL"),
    cdisc_dataset("ADRS", ADRS,
      code = "ADRS <- rADRS
              ADRS <- ADRS \%>\% dplyr::filter(PARAMCD == 'LSTASDI' & DCSREAS == 'Death') \%>\%
                      mutate(AVALC = DCSREAS, ADY = EOSDY) \%>\%
              rbind(ADRS \%>\% dplyr::filter(PARAMCD == 'OVRINV' & AVALC != 'NE')) \%>\%
              arrange(USUBJID)"),
    check = TRUE
  ),
  modules = root_modules(
    tm_g_swimlane(
      label = "Swimlane Plot",
      dataname = "ADRS",
      bar_var = choices_selected(selected = "TRTDURD", choices = c("TRTDURD", "EOSDY")),
      bar_color_var = choices_selected(
        selected = "EOSSTT",
        choices = c("EOSSTT", "ARM", "ARMCD", "ACTARM", "ACTARMCD", "AGEGR1", "SEX")
      ),
      sort_var = choices_selected(
        selected = "ACTARMCD",
        choices = c("USUBJID", "SITEID", "ACTARMCD", "TRTDURD")
      ),
      marker_pos_var = choices_selected(selected = "ADY", choices = c("ADY")),
      marker_shape_var = choices_selected(selected = "AVALC", c("AVALC", "AVISIT")),
      marker_shape_opt = c("CR" = 16, "PR" = 17, "SD" = 18, "PD" = 15, "Death" = 8),
      marker_color_var = choices_selected(selected = "AVALC",
                                          choices = c("AVALC", "AVISIT")),
      marker_color_opt = c("CR" = "green", "PR" = "blue", "SD" = "goldenrod",
                           "PD" = "red", "Death" = "black"),
      vref_line = c(30, 60),
      anno_txt_var = choices_selected(
        selected = c("ACTARM", "SEX"),
        choices = c("ARM", "ARMCD", "ACTARM", "ACTARMCD", "AGEGR1",
                    "SEX", "RACE", "COUNTRY", "DCSREAS", "DCSREASP")
      )
    )
  )
  )

\dontrun{
shinyApp(x$ui, x$server)
}

}
\author{
Ting Qi (qit3) \email{qit3@gene.com}
}
