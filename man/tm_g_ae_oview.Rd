% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_ae_oview.R
\name{tm_g_ae_oview}
\alias{tm_g_ae_oview}
\title{Teal module for the AE overview}
\usage{
tm_g_ae_oview(
  label,
  dataname,
  arm_var,
  flag_var_anl,
  fontsize = c(5, 3, 7),
  plot_height = c(600L, 200L, 2000L),
  plot_width = NULL
)
}
\arguments{
\item{label}{(\code{character(1)})\cr
menu item label of the module in the teal app}

\item{dataname}{(\code{character(1)})\cr
analysis data used in the teal module, needs to be
available in the list passed to the \code{data} argument of \code{\link[teal:init]{teal::init()}}.}

\item{arm_var}{(\code{choices_selected})\cr
object with all available choices and the pre-selected option for variable
names that can be used as \code{arm_var}. See \code{\link[teal:choices_selected]{teal::choices_selected()}} for
details.}

\item{flag_var_anl}{(\code{\link[teal:choices_selected]{teal::choices_selected}})
\code{choices_selected} object with variables used to count adverse event
sub-groups (e.g. Serious events, Related events, etc.)}

\item{fontsize}{(\code{numeric}) vector with 3 values, selected font size and font size range,
default is \code{c(5, 3, 7)}}

\item{plot_height}{(\code{numeric(3)})\cr
vector to indicate default value, minimum and maximum values.}

\item{plot_width}{(\code{numeric(3)})\cr
vector to indicate default value, minimum and maximum values.}
}
\value{
the \code{\link[teal:module]{teal::module()}} object
}
\description{
Display the AE overview plot as a shiny module
}
\examples{
library(scda)

ADSL <- synthetic_cdisc_data("latest")$adsl
ADAE <- synthetic_cdisc_data("latest")$adae

# Add additional dummy causality flags.
add_event_flags <- function(dat) {
  dat \%>\%
    dplyr::mutate(
      TMPFL_SER = AESER == "Y",
      TMPFL_REL = AEREL == "Y",
      TMPFL_GR5 = AETOXGR == "5",
      AEREL1 = (AEREL == "Y" & ACTARM == "A: Drug X"),
      AEREL2 = (AEREL == "Y" & ACTARM == "B: Placebo")
    ) \%>\%
    rtables::var_relabel(
      TMPFL_SER = "Serious AE",
      TMPFL_REL = "Related AE",
      TMPFL_GR5 = "Grade 5 AE",
      AEREL1 = "AE related to A: Drug X",
      AEREL2 = "AE related to B: Placebo"
    )
}
ADAE <- ADAE \%>\% add_event_flags()

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL, code = "ADSL <- synthetic_cdisc_data(\"latest\")$adsl"),
    cdisc_dataset("ADAE", ADAE,
      code =
        "ADAE <- synthetic_cdisc_data('latest')$adae
          add_event_flags <- function(dat) {
            dat \%>\%
              dplyr::mutate(
                TMPFL_SER = AESER == 'Y',
                TMPFL_REL = AEREL == 'Y',
                TMPFL_GR5 = AETOXGR == '5',
                AEREL1 = (AEREL == 'Y' & ACTARM == 'A: Drug X'),
                AEREL2 = (AEREL == 'Y' & ACTARM == 'B: Placebo')
              ) \%>\%
              rtables::var_relabel(
                TMPFL_SER = 'Serious AE',
                TMPFL_REL = 'Related AE',
                TMPFL_GR5 = 'Grade 5 AE',
                AEREL1 = 'AE related to A: Drug X',
                AEREL2 = 'AE related to B: Placebo'
              )
          }
          # Generating user-defined event flags.
          ADAE <- ADAE \%>\% add_event_flags()"
    ),
    check = TRUE
  ),
  modules = root_modules(
    tm_g_ae_oview(
      label = "AE Overview",
      dataname = "ADAE",
      arm_var = choices_selected(
        selected = "ACTARM",
        choices = c("ACTARM", "ACTARMCD")
      ),
      flag_var_anl = choices_selected(
        selected = "AEREL1",
        choices = c("TMPFL_SER", "TMPFL_REL", "TMPFL_GR5", "AEREL1", "AEREL2")
      ),
      plot_height = c(600, 200, 2000)
    )
  )
)
\dontrun{
shinyApp(app$ui, app$server)
}
}
